// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uITbPraeteritumEdit = this.UIStarkeundunregelmäßiWindow.UITbPraeteritumWindow.UITbPraeteritumEdit;
            WinEdit uITbPerfektEdit = this.UIStarkeundunregelmäßiWindow.UITbPerfektWindow.UITbPerfektEdit;
            WinButton uIOKButton = this.UIStarkeundunregelmäßiWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type 'zog' in 'tbPraeteritum' text box
            uITbPraeteritumEdit.Text = this.RecordedMethod1Params.UITbPraeteritumEditText;

            // Type '{Tab}' in 'tbPraeteritum' text box
            Keyboard.SendKeys(uITbPraeteritumEdit, this.RecordedMethod1Params.UITbPraeteritumEditSendKeys, ModifierKeys.None);

            // Type 'gezogen' in 'tbPerfekt' text box
            uITbPerfektEdit.Text = this.RecordedMethod1Params.UITbPerfektEditText;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(88, 11));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinEdit uITbPraeteritumEdit = this.UIStarkeundunregelmäßiWindow.UITbPraeteritumWindow.UITbPraeteritumEdit;
            WinEdit uITbPerfektEdit = this.UIStarkeundunregelmäßiWindow.UITbPerfektWindow.UITbPerfektEdit;
            WinButton uIOKButton = this.UIStarkeundunregelmäßiWindow.UIOKWindow.UIOKButton;
            WinEdit uITbPraesensEdit = this.UIStarkeundunregelmäßiWindow.UILeidenWindow.UITbPraesensEdit;
            WinHyperlink uIShowmeatipHyperlink = this.UIStarkeundunregelmäßiWindow.UIShowmeatipText.UIShowmeatipHyperlink;
            WinClient uIStarkeundunregelmäßiClient = this.UIStarkeundunregelmäßiWindow.UIStarkeundunregelmäßiClient;
            #endregion

            // Type 'zog' in 'tbPraeteritum' text box
            uITbPraeteritumEdit.Text = this.RecordedMethod2Params.UITbPraeteritumEditText;

            // Type '{Tab}' in 'tbPraeteritum' text box
            Keyboard.SendKeys(uITbPraeteritumEdit, this.RecordedMethod2Params.UITbPraeteritumEditSendKeys, ModifierKeys.None);

            // Type 'gezogen' in 'tbPerfekt' text box
            uITbPerfektEdit.Text = this.RecordedMethod2Params.UITbPerfektEditText;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(88, 11));

            // Click 'tbPraeteritum' text box
            Mouse.Click(uITbPraeteritumEdit, new Point(40, 15));

            // Click 'tbPraesens' text box
            Mouse.Click(uITbPraesensEdit, new Point(288, 8));

            // Click 'tbPraeteritum' text box
            Mouse.Click(uITbPraeteritumEdit, new Point(31, 16));

            // Click 'Show me a tip' link
            Mouse.Click(uIShowmeatipHyperlink, new Point(37, 4));

            // Type 'lid' in 'tbPraeteritum' text box
            uITbPraeteritumEdit.Text = this.RecordedMethod2Params.UITbPraeteritumEditText1;

            // Type '{Tab}' in 'tbPraeteritum' text box
            Keyboard.SendKeys(uITbPraeteritumEdit, this.RecordedMethod2Params.UITbPraeteritumEditSendKeys1, ModifierKeys.None);

            // Type 'geliden' in 'tbPerfekt' text box
            uITbPerfektEdit.Text = this.RecordedMethod2Params.UITbPerfektEditText1;

            // Click 'Starke und unregelmäßige Verben' client
            Mouse.Click(uIStarkeundunregelmäßiClient, new Point(410, 327));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(74, 33));
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinEdit uITbPraeteritumEdit = this.UIStarkeundunregelmäßiWindow.UITbPraeteritumWindow.UITbPraeteritumEdit;
            WinEdit uITbPerfektEdit = this.UIStarkeundunregelmäßiWindow.UITbPerfektWindow.UITbPerfektEdit;
            WinButton uIOKButton = this.UIStarkeundunregelmäßiWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type 'rief an' in 'tbPraeteritum' text box
            uITbPraeteritumEdit.Text = this.RecordedMethod3Params.UITbPraeteritumEditText;

            // Type '{Tab}' in 'tbPraeteritum' text box
            Keyboard.SendKeys(uITbPraeteritumEdit, this.RecordedMethod3Params.UITbPraeteritumEditSendKeys, ModifierKeys.None);

            // Type 'angerufen' in 'tbPerfekt' text box
            uITbPerfektEdit.Text = this.RecordedMethod3Params.UITbPerfektEditText;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(92, 35));
        }
        
        /// <summary>
        /// StartApp
        /// </summary>
        public void StartApp()
        {
            #region Variable Declarations
            WinTreeItem uIMediaITreeItem = this.UIПроводникWindow.UIДеревоWindow.UIРабочийстолTreeItem.UIЭтоткомпьютерTreeItem.UIMediaITreeItem;
            WinEdit uIИмяEdit = this.UIПроводникWindow.UIItemWindow.UIEulerListItem.UIИмяEdit;
            WinEdit uIИмяEdit1 = this.UIПроводникWindow.UIItemWindow1.UIWindowsFormsApplicatListItem.UIИмяEdit;
            WinEdit uIИмяEdit2 = this.UIПроводникWindow.UIItemWindow2.UIWindowsFormsApplicatListItem.UIИмяEdit;
            WinEdit uIИмяEdit3 = this.UIПроводникWindow.UIItemWindow3.UIBinListItem.UIИмяEdit;
            WinEdit uIИмяEdit4 = this.UIПроводникWindow.UIItemWindow4.UIDebugListItem.UIИмяEdit;
            WinEdit uIИмяEdit5 = this.UIПроводникWindow.UIItemWindow5.UIWindowsFormsApplicatListItem.UIИмяEdit;
            #endregion

            // Click 'Рабочий стол' -> 'Этот компьютер' -> 'Media (I:)' tree item
            Mouse.Click(uIMediaITreeItem, new Point(25, 11));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(31, 7));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit1, new Point(35, 10));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit2, new Point(18, 11));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit3, new Point(20, 12));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit4, new Point(32, 9));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit5, new Point(36, 10));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinEdit uITbScoresEdit = this.UIStarkeundunregelmäßiWindow.UIItem0Window.UITbScoresEdit;
            #endregion

            // Verify that the 'ControlType' property of 'tbScores' text box equals 'Edit'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITbScoresEditControlType, uITbScoresEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinText uIItem0Text = this.UIStarkeundunregelmäßiWindow.UIItem0Window1.UIItem0Text;
            #endregion

            // Verify that the 'ControlType' property of '0' label equals 'Text'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UIItem0TextControlType, uIItem0Text.ControlType.ToString());
        }
        
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public UIStarkeundunregelmäßiWindow UIStarkeundunregelmäßiWindow
        {
            get
            {
                if ((this.mUIStarkeundunregelmäßiWindow == null))
                {
                    this.mUIStarkeundunregelmäßiWindow = new UIStarkeundunregelmäßiWindow();
                }
                return this.mUIStarkeundunregelmäßiWindow;
            }
        }
        
        public UIПроводникWindow UIПроводникWindow
        {
            get
            {
                if ((this.mUIПроводникWindow == null))
                {
                    this.mUIПроводникWindow = new UIПроводникWindow();
                }
                return this.mUIПроводникWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private UIStarkeundunregelmäßiWindow mUIStarkeundunregelmäßiWindow;
        
        private UIПроводникWindow mUIПроводникWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'zog' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditText = "zog";
        
        /// <summary>
        /// Type '{Tab}' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'gezogen' in 'tbPerfekt' text box
        /// </summary>
        public string UITbPerfektEditText = "gezogen";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'zog' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditText = "zog";
        
        /// <summary>
        /// Type '{Tab}' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'gezogen' in 'tbPerfekt' text box
        /// </summary>
        public string UITbPerfektEditText = "gezogen";
        
        /// <summary>
        /// Type 'lid' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditText1 = "lid";
        
        /// <summary>
        /// Type '{Tab}' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type 'geliden' in 'tbPerfekt' text box
        /// </summary>
        public string UITbPerfektEditText1 = "geliden";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'rief an' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditText = "rief an";
        
        /// <summary>
        /// Type '{Tab}' in 'tbPraeteritum' text box
        /// </summary>
        public string UITbPraeteritumEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'angerufen' in 'tbPerfekt' text box
        /// </summary>
        public string UITbPerfektEditText = "angerufen";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'tbScores' text box equals 'Edit'
        /// </summary>
        public string UITbScoresEditControlType = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of '0' label equals 'Text'
        /// </summary>
        public string UIItem0TextControlType = "Text";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStarkeundunregelmäßiWindow : WinWindow
    {
        
        public UIStarkeundunregelmäßiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Starke und unregelmäßige Verben";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public UITbPraeteritumWindow UITbPraeteritumWindow
        {
            get
            {
                if ((this.mUITbPraeteritumWindow == null))
                {
                    this.mUITbPraeteritumWindow = new UITbPraeteritumWindow(this);
                }
                return this.mUITbPraeteritumWindow;
            }
        }
        
        public UITbPerfektWindow UITbPerfektWindow
        {
            get
            {
                if ((this.mUITbPerfektWindow == null))
                {
                    this.mUITbPerfektWindow = new UITbPerfektWindow(this);
                }
                return this.mUITbPerfektWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UILeidenWindow UILeidenWindow
        {
            get
            {
                if ((this.mUILeidenWindow == null))
                {
                    this.mUILeidenWindow = new UILeidenWindow(this);
                }
                return this.mUILeidenWindow;
            }
        }
        
        public UIShowmeatipText UIShowmeatipText
        {
            get
            {
                if ((this.mUIShowmeatipText == null))
                {
                    this.mUIShowmeatipText = new UIShowmeatipText(this);
                }
                return this.mUIShowmeatipText;
            }
        }
        
        public WinClient UIStarkeundunregelmäßiClient
        {
            get
            {
                if ((this.mUIStarkeundunregelmäßiClient == null))
                {
                    this.mUIStarkeundunregelmäßiClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIStarkeundunregelmäßiClient.SearchProperties[WinControl.PropertyNames.Name] = "Starke und unregelmäßige Verben";
                    this.mUIStarkeundunregelmäßiClient.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUIStarkeundunregelmäßiClient;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIItem0Window1 UIItem0Window1
        {
            get
            {
                if ((this.mUIItem0Window1 == null))
                {
                    this.mUIItem0Window1 = new UIItem0Window1(this);
                }
                return this.mUIItem0Window1;
            }
        }
        #endregion
        
        #region Fields
        private UITbPraeteritumWindow mUITbPraeteritumWindow;
        
        private UITbPerfektWindow mUITbPerfektWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UILeidenWindow mUILeidenWindow;
        
        private UIShowmeatipText mUIShowmeatipText;
        
        private WinClient mUIStarkeundunregelmäßiClient;
        
        private UIItem0Window mUIItem0Window;
        
        private UIItem0Window1 mUIItem0Window1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITbPraeteritumWindow : WinWindow
    {
        
        public UITbPraeteritumWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tbPraeteritum";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinEdit UITbPraeteritumEdit
        {
            get
            {
                if ((this.mUITbPraeteritumEdit == null))
                {
                    this.mUITbPraeteritumEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITbPraeteritumEdit.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUITbPraeteritumEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITbPraeteritumEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITbPerfektWindow : WinWindow
    {
        
        public UITbPerfektWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tbPerfekt";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinEdit UITbPerfektEdit
        {
            get
            {
                if ((this.mUITbPerfektEdit == null))
                {
                    this.mUITbPerfektEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITbPerfektEdit.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUITbPerfektEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITbPerfektEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btNext";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "Ok";
                    this.mUIOKButton.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILeidenWindow : WinWindow
    {
        
        public UILeidenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tbPraesens";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinEdit UITbPraesensEdit
        {
            get
            {
                if ((this.mUITbPraesensEdit == null))
                {
                    this.mUITbPraesensEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITbPraesensEdit.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUITbPraesensEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITbPraesensEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIShowmeatipText : WinText
    {
        
        public UIShowmeatipText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinText.PropertyNames.Name] = "Show me a tip";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinHyperlink UIShowmeatipHyperlink
        {
            get
            {
                if ((this.mUIShowmeatipHyperlink == null))
                {
                    this.mUIShowmeatipHyperlink = new WinHyperlink(this);
                    #region Search Criteria
                    this.mUIShowmeatipHyperlink.SearchProperties[WinHyperlink.PropertyNames.Name] = "Show me a tip";
                    this.mUIShowmeatipHyperlink.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUIShowmeatipHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WinHyperlink mUIShowmeatipHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tbScores";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinEdit UITbScoresEdit
        {
            get
            {
                if ((this.mUITbScoresEdit == null))
                {
                    this.mUITbScoresEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITbScoresEdit.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUITbScoresEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITbScoresEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem0Window1 : WinWindow
    {
        
        public UIItem0Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lbScores";
            this.WindowTitles.Add("Starke und unregelmäßige Verben");
            #endregion
        }
        
        #region Properties
        public WinText UIItem0Text
        {
            get
            {
                if ((this.mUIItem0Text == null))
                {
                    this.mUIItem0Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem0Text.SearchProperties[WinText.PropertyNames.Name] = "0";
                    this.mUIItem0Text.WindowTitles.Add("Starke und unregelmäßige Verben");
                    #endregion
                }
                return this.mUIItem0Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem0Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIПроводникWindow : WinWindow
    {
        
        public UIПроводникWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Проводник";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Проводник");
            this.WindowTitles.Add("Media (I:)");
            this.WindowTitles.Add("euler");
            this.WindowTitles.Add("WindowsFormsApplication1");
            this.WindowTitles.Add("bin");
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIДеревоWindow UIДеревоWindow
        {
            get
            {
                if ((this.mUIДеревоWindow == null))
                {
                    this.mUIДеревоWindow = new UIДеревоWindow(this);
                }
                return this.mUIДеревоWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        #endregion
        
        #region Fields
        private UIДеревоWindow mUIДеревоWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIДеревоWindow : WinWindow
    {
        
        public UIДеревоWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Проводник");
            #endregion
        }
        
        #region Properties
        public UIРабочийстолTreeItem UIРабочийстолTreeItem
        {
            get
            {
                if ((this.mUIРабочийстолTreeItem == null))
                {
                    this.mUIРабочийстолTreeItem = new UIРабочийстолTreeItem(this);
                }
                return this.mUIРабочийстолTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIРабочийстолTreeItem mUIРабочийстолTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIРабочийстолTreeItem : WinTreeItem
    {
        
        public UIРабочийстолTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Рабочий стол";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Проводник");
            #endregion
        }
        
        #region Properties
        public UIЭтоткомпьютерTreeItem UIЭтоткомпьютерTreeItem
        {
            get
            {
                if ((this.mUIЭтоткомпьютерTreeItem == null))
                {
                    this.mUIЭтоткомпьютерTreeItem = new UIЭтоткомпьютерTreeItem(this);
                }
                return this.mUIЭтоткомпьютерTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIЭтоткомпьютерTreeItem mUIЭтоткомпьютерTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIЭтоткомпьютерTreeItem : WinTreeItem
    {
        
        public UIЭтоткомпьютерTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Этот компьютер";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Проводник");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIMediaITreeItem
        {
            get
            {
                if ((this.mUIMediaITreeItem == null))
                {
                    this.mUIMediaITreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIMediaITreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Media (I:)";
                    this.mUIMediaITreeItem.SearchProperties["Value"] = "2";
                    this.mUIMediaITreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIMediaITreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIMediaITreeItem.WindowTitles.Add("Проводник");
                    #endregion
                }
                return this.mUIMediaITreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIMediaITreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Media (I:)");
            #endregion
        }
        
        #region Properties
        public UIEulerListItem UIEulerListItem
        {
            get
            {
                if ((this.mUIEulerListItem == null))
                {
                    this.mUIEulerListItem = new UIEulerListItem(this);
                }
                return this.mUIEulerListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEulerListItem mUIEulerListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIEulerListItem : WinListItem
    {
        
        public UIEulerListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "euler";
            this.WindowTitles.Add("Media (I:)");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Media (I:)");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("euler");
            #endregion
        }
        
        #region Properties
        public UIWindowsFormsApplicatListItem UIWindowsFormsApplicatListItem
        {
            get
            {
                if ((this.mUIWindowsFormsApplicatListItem == null))
                {
                    this.mUIWindowsFormsApplicatListItem = new UIWindowsFormsApplicatListItem(this);
                }
                return this.mUIWindowsFormsApplicatListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIWindowsFormsApplicatListItem mUIWindowsFormsApplicatListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWindowsFormsApplicatListItem : WinListItem
    {
        
        public UIWindowsFormsApplicatListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "WindowsFormsApplication1";
            this.WindowTitles.Add("euler");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("euler");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("WindowsFormsApplication1");
            #endregion
        }
        
        #region Properties
        public UIWindowsFormsApplicatListItem1 UIWindowsFormsApplicatListItem
        {
            get
            {
                if ((this.mUIWindowsFormsApplicatListItem == null))
                {
                    this.mUIWindowsFormsApplicatListItem = new UIWindowsFormsApplicatListItem1(this);
                }
                return this.mUIWindowsFormsApplicatListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIWindowsFormsApplicatListItem1 mUIWindowsFormsApplicatListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWindowsFormsApplicatListItem1 : WinListItem
    {
        
        public UIWindowsFormsApplicatListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "WindowsFormsApplication1";
            this.WindowTitles.Add("WindowsFormsApplication1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("WindowsFormsApplication1");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("WindowsFormsApplication1");
            #endregion
        }
        
        #region Properties
        public UIBinListItem UIBinListItem
        {
            get
            {
                if ((this.mUIBinListItem == null))
                {
                    this.mUIBinListItem = new UIBinListItem(this);
                }
                return this.mUIBinListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIBinListItem mUIBinListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBinListItem : WinListItem
    {
        
        public UIBinListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "bin";
            this.WindowTitles.Add("WindowsFormsApplication1");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("WindowsFormsApplication1");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("bin");
            #endregion
        }
        
        #region Properties
        public UIDebugListItem UIDebugListItem
        {
            get
            {
                if ((this.mUIDebugListItem == null))
                {
                    this.mUIDebugListItem = new UIDebugListItem(this);
                }
                return this.mUIDebugListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDebugListItem mUIDebugListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDebugListItem : WinListItem
    {
        
        public UIDebugListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Debug";
            this.WindowTitles.Add("bin");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("bin");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIWindowsFormsApplicatListItem2 UIWindowsFormsApplicatListItem
        {
            get
            {
                if ((this.mUIWindowsFormsApplicatListItem == null))
                {
                    this.mUIWindowsFormsApplicatListItem = new UIWindowsFormsApplicatListItem2(this);
                }
                return this.mUIWindowsFormsApplicatListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIWindowsFormsApplicatListItem2 mUIWindowsFormsApplicatListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWindowsFormsApplicatListItem2 : WinListItem
    {
        
        public UIWindowsFormsApplicatListItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "WindowsFormsApplication1.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
}
